{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/about/about.component.ts","webpack:///src/app/components/about/about.component.html","webpack:///src/app/components/employee-count/employee-count.component.ts","webpack:///src/app/components/employee-count/employee-count.component.html","webpack:///src/app/components/employee-list/employee-list.component.ts","webpack:///src/app/components/employee-list/employee-list.component.html","webpack:///src/app/components/employee-list/employee-title.pipe.ts","webpack:///src/app/components/employee/employee.component.ts","webpack:///src/app/components/employee/employee.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/modules/test/test.module.ts","webpack:///src/app/services/employee.service.ts","webpack:///src/app/services/user-preferences.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","pageHeader","name","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AboutComponent","EmployeeCountComponent","selectedRadioButtonValue","countRadioButtonSelectionChanged","emit","onRadioButtonSelectionChange","EmployeeListComponent","employeeService","userPreferencesService","errorText","selectedEmployeeCountRadioButton","getEmployee","subscribe","res","employees","err","console","log","colorPreference","value","EmployeeTitlePipe","gender","toLowerCase","EmployeeComponent","activatedRoute","router","statusMessage","navigate","empCode","snapshot","params","getEmployeeByCode","employeeData","employee","onButtonClick","HeaderComponent","HomeComponent","TestModule","EmployeeService","http","get","providedIn","UserPreferencesService","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EmployeeListComponent } from './components/employee-list/employee-list.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { EmployeeComponent } from './components/employee/employee.component';\nimport { HomeComponent } from './components/home/home.component';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'employee', component: EmployeeListComponent },\n  { path: 'employee/:id', component: EmployeeComponent },\n  { path: 'about', component: AboutComponent },\n  { path: '', redirectTo: '/home', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  pageHeader:string = 'Employee Details';\n\n  name:string = 'Tom';\n}\n","<div>\n  <!-- <h1>{{pageHeader}}</h1> -->\n  <!-- Name: <input type=\"text\" [(ngModel)]=\"name\"/>\n  <app-employee [simpleInput]=\"name\"></app-employee> -->\n  <app-header></app-header>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TestModule } from './modules/test/test.module';\n\nimport { AppComponent } from './app.component';\nimport { EmployeeComponent } from './components/employee/employee.component';\nimport { EmployeeListComponent } from './components/employee-list/employee-list.component';\nimport { EmployeeTitlePipe } from './components/employee-list/employee-title.pipe';\nimport { EmployeeCountComponent } from './components/employee-count/employee-count.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AboutComponent } from './components/about/about.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { HomeComponent } from './components/home/home.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeComponent,\n    EmployeeListComponent,\n    EmployeeTitlePipe,\n    EmployeeCountComponent,\n    AboutComponent,\n    HeaderComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    TestModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <h1>About</h1>\n    <p>This is Employee List</p>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-employee-count',\n  templateUrl: './employee-count.component.html',\n  styleUrls: ['./employee-count.component.css']\n})\nexport class EmployeeCountComponent implements OnInit {\n  @Input() all:number;\n  @Input() male:number;\n  @Input() female:number;\n\n  selectedRadioButtonValue:string = 'All';\n\n  @Output() countRadioButtonSelectionChanged: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onRadioButtonSelectionChange() {\n    this.countRadioButtonSelectionChanged.emit(this.selectedRadioButtonValue);\n  }\n}\n","<div class=\"container\">\n    <span class=\"radioClass\">Show:</span>\n\n    <input type=\"radio\" name=\"options\" value=\"All\" [(ngModel)]=\"selectedRadioButtonValue\" (change)=\"onRadioButtonSelectionChange()\" />\n    <span class=\"radioClass\">{{\"All(\" + all + \")\"}}</span>\n\n    <input type=\"radio\" name=\"options\" value=\"Male\" [(ngModel)]=\"selectedRadioButtonValue\" (change)=\"onRadioButtonSelectionChange()\" />\n    <span class=\"radioClass\">{{\"Male(\" + male + \")\"}}</span>\n\n    <input type=\"radio\" name=\"options\" value=\"Female\" [(ngModel)]=\"selectedRadioButtonValue\" (change)=\"onRadioButtonSelectionChange()\" />\n    <span class=\"radioClass\">{{\"Female(\" + female + \")\"}}</span>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { IEmployee } from '../../interfaces/iemployee';\nimport { EmployeeService } from '../../services/employee.service';\nimport { UserPreferencesService } from '../../services/user-preferences.service';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\n\nexport class EmployeeListComponent implements OnInit {\n  employees:IEmployee[];\n  errorText:string = \"Loading...\";\n\n  selectedEmployeeCountRadioButton:string = 'All';\n\n  constructor(private employeeService: EmployeeService, private userPreferencesService:UserPreferencesService) {\n    \n   }\n\n  ngOnInit() {\n    this.employeeService.getEmployee().subscribe((res) => this.employees = res, (err) => this.errorText = 'Loading Error', () => console.log('completed'));\n  }\n\n  get color():string {\n    return this.userPreferencesService.colorPreference;\n  }\n\n  set color(value:string) {\n    this.userPreferencesService.colorPreference = value;\n  }\n  \n}\n","<table>\n    <thead>\n        <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Username</th>\n            <th>Email</th>\n            <th>Phone</th>\n            <th>Website</th>\n        </tr>\n    </thead>\n    <tbody>\n        <ng-container *ngFor=\"let employee of employees\">\n            <tr>\n                <a [routerLink]=\"['/employee', employee.id]\">\n                    <td>{{employee.id}}</td>\n                </a>\n                <td>{{employee.name}}</td>\n                <td>{{employee.username}}</td>\n                <td>{{employee.email}}</td>\n                <td>{{employee.phone}}</td>\n                <td>{{employee.website}}</td>\n            </tr>\n        </ng-container>\n        <tr *ngIf=\"!employees\">\n            <td colspan=\"6\">{{errorText}}</td>\n        </tr>\n    </tbody>\n</table>\n<input type=\"text\" [(ngModel)]=\"color\" [style.background]=\"color\">","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'employeeTitle'\n})\nexport class EmployeeTitlePipe implements PipeTransform {\n\n  transform(value:string, gender:string):string {\n    if (gender.toLowerCase() === 'male') {\n      return 'Mr.' + value;\n    }\n    else {\n      return 'Miss.' + value;\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { IEmployee } from '../../interfaces/iemployee';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EmployeeService } from '../../services/employee.service';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n  employee:IEmployee;\n  statusMessage:string = \"Loading...\";\n\n  constructor(private employeeService:EmployeeService, \n              private activatedRoute:ActivatedRoute, \n              private router:Router) {\n\n  }\n\n  onButtonClick() {\n    this.router.navigate(['/employee']);\n  }\n\n  ngOnInit() {\n    let empCode:string = this.activatedRoute.snapshot.params['id'];\n    this.employeeService.getEmployeeByCode(empCode).subscribe(\n      (employeeData) => this.employee = employeeData,\n      (err) => this.statusMessage = 'Error loading');\n  }\n}\n","<table *ngIf=\"employee\">\n    <thead>\n        <tr>\n            <th colspan=\"2\">\n                Employee Details\n            </th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>ID</td>\n            <td>{{employee.id}}</td>\n        </tr>\n        <tr>\n            <td>Name</td>\n            <td>{{employee.name}}</td>\n        </tr>\n        <tr>\n            <td>Usename</td>\n            <td>{{employee.username}}</td>\n        </tr>\n        <tr>\n            <td>Email</td>\n            <td>{{employee.email}}</td>\n        </tr>\n        <tr>\n            <td>Phone</td>\n            <td>{{employee.phone}}</td>\n        </tr>\n        <tr>\n            <td>Website</td>\n            <td>{{employee.website}}</td>\n        </tr>\n    </tbody>\n</table>\n<div *ngIf=\"!employee\">\n    {{statusMessage}}\n</div>\n<div style=\"margin-top: 10px;\">\n    <button (click)=\"onButtonClick()\">Employee List</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n    <h1>Employee List</h1>\n    <nav>\n        <a routerLink=\"/home\">Home</a> | <a routerLink=\"/employee\">Employee</a> | <a routerLink=\"/about\">About</a>\n    </nav>\n</header>","import { Component, OnInit } from '@angular/core';\nimport { UserPreferencesService } from '../../services/user-preferences.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private userPreferencesService:UserPreferencesService) { }\n\n  ngOnInit(): void {\n  }\n\n  get color():string {\n    return this.userPreferencesService.colorPreference;\n  }\n\n  set color(value:string) {\n    this.userPreferencesService.colorPreference = value;\n  }\n\n}\n","<h1>This is Home</h1>\r\n<input type=\"text\" [(ngModel)]=\"color\" [style.background]=\"color\">","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmployeeService } from '../../services/employee.service';\nimport { UserPreferencesService } from '../../services/user-preferences.service';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [EmployeeService, UserPreferencesService]\n})\nexport class TestModule { }\n","import { Injectable } from '@angular/core';\nimport { IEmployee } from '../interfaces/iemployee';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  constructor(private http:HttpClient) { }\n\n  getEmployee(): Observable<IEmployee[]> {\n    return this.http.get<IEmployee[]>('https://jsonplaceholder.typicode.com/users/');\n  }\n\n  getEmployeeByCode(empCode:string): Observable<IEmployee> {\n    return this.http.get<IEmployee>('https://jsonplaceholder.typicode.com/users/' + empCode);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserPreferencesService {\n\n  constructor() { }\n\n  colorPreference:string = 'green';\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}