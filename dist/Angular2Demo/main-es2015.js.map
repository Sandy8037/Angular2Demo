{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/about/about.component.ts","./src/app/components/about/about.component.html","./src/app/components/employee-count/employee-count.component.ts","./src/app/components/employee-count/employee-count.component.html","./src/app/components/employee-list/employee-list.component.ts","./src/app/components/employee-list/employee-list.component.html","./src/app/components/employee-list/employee-title.pipe.ts","./src/app/components/employee/employee.component.ts","./src/app/components/employee/employee.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/modules/test/test.module.ts","./src/app/services/employee.service.ts","./src/app/services/user-preferences.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACoC;AACvB;AACS;AACZ;;;AAEjE,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,6EAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,uGAAqB,EAAE;IACtD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,yFAAiB,EAAE;IACtD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gFAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE;CACrD,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;AAOnC,MAAM,YAAY;IALzB;QAME,eAAU,GAAU,kBAAkB,CAAC;QAEvC,SAAI,GAAU,KAAK,CAAC;KACrB;;wEAJY,YAAY;4FAAZ,YAAY;QCPzB,sEACE;QAGA,wEAAyB;QACzB,2EAA+B;QACjC,4DAAM;;6FDCO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACI;AACW;AACA;AAET;AAC8B;AACc;AACR;AACW;AACtC;AACY;AACG;AACN;;AAwB1D,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAPJ;YACP,uEAAa;YACb,0DAAW;YACX,qEAAgB;YAChB,qEAAgB;YAChB,oEAAU;SACX;mIAIU,SAAS,mBAnBlB,2DAAY;QACZ,yFAAiB;QACjB,uGAAqB;QACrB,+FAAiB;QACjB,0GAAsB;QACtB,iFAAc;QACd,oFAAe;QACf,8EAAa,aAGb,uEAAa;QACb,0DAAW;QACX,qEAAgB;QAChB,qEAAgB;QAChB,oEAAU;6FAKD,SAAS;cArBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,yFAAiB;oBACjB,uGAAqB;oBACrB,+FAAiB;oBACjB,0GAAsB;oBACtB,iFAAc;oBACd,oFAAe;oBACf,8EAAa;iBACd;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,0DAAW;oBACX,qEAAgB;oBAChB,qEAAgB;oBAChB,oEAAU;iBACX;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACrCD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;8FAAd,cAAc;QCP3B,sEACI;QAAA,qEAAI;QAAA,gEAAK;QAAA,4DAAK;QACd,oEAAG;QAAA,gFAAqB;QAAA,4DAAI;QAChC,4DAAM;;6FDIO,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAA+E;;;AAOxE,MAAM,sBAAsB;IASjC;QAJA,6BAAwB,GAAU,KAAK,CAAC;QAE9B,qCAAgC,GAAyB,IAAI,0DAAY,EAAU,CAAC;IAE9E,CAAC;IAEjB,QAAQ;IACR,CAAC;IAED,4BAA4B;QAC1B,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;IAC5E,CAAC;;4FAhBU,sBAAsB;sGAAtB,sBAAsB;QCPnC,yEACI;QAAA,0EAAyB;QAAA,gEAAK;QAAA,4DAAO;QAErC,2EACA;QAD+C,4MAAsC,uFAAW,kCAA8B,IAAzC;QAArF,4DACA;QAAA,0EAAyB;QAAA,uDAAsB;QAAA,4DAAO;QAEtD,2EACA;QADgD,4MAAsC,uFAAW,kCAA8B,IAAzC;QAAtF,4DACA;QAAA,0EAAyB;QAAA,uDAAwB;QAAA,4DAAO;QAExD,2EACA;QADkD,4MAAsC,uFAAW,kCAA8B,IAAzC;QAAxF,4DACA;QAAA,2EAAyB;QAAA,wDAA4B;QAAA,4DAAO;QAChE,4DAAM;;QAR6C,0DAAsC;QAAtC,iGAAsC;QAC5D,0DAAsB;QAAtB,uFAAsB;QAEC,0DAAsC;QAAtC,iGAAsC;QAC7D,0DAAwB;QAAxB,yFAAwB;QAEC,0DAAsC;QAAtC,iGAAsC;QAC/D,0DAA4B;QAA5B,6FAA4B;;6FDH5C,sBAAsB;cALlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;kBAEE,mDAAK;;kBACL,mDAAK;;kBACL,mDAAK;;kBAIL,oDAAM;;;;;;;;;;;;;;AEdT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;ICY1C,wEACI;IAAA,qEACI;IAAA,uEACI;IAAA,qEAAI;IAAA,uDAAe;IAAA,4DAAK;IAC5B,4DAAI;IACJ,qEAAI;IAAA,uDAAiB;IAAA,4DAAK;IAC1B,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAC9B,qEAAI;IAAA,wDAAkB;IAAA,4DAAK;IAC3B,sEAAI;IAAA,wDAAkB;IAAA,4DAAK;IAC3B,sEAAI;IAAA,wDAAoB;IAAA,4DAAK;IACjC,4DAAK;IACT,qEAAe;;;IATJ,0DAAyC;IAAzC,6JAAyC;IACpC,0DAAe;IAAf,+EAAe;IAEnB,0DAAiB;IAAjB,iFAAiB;IACjB,0DAAqB;IAArB,qFAAqB;IACrB,0DAAkB;IAAlB,kFAAkB;IAClB,0DAAkB;IAAlB,kFAAkB;IAClB,0DAAoB;IAApB,oFAAoB;;;IAGhC,qEACI;IAAA,wEAAgB;IAAA,uDAAa;IAAA,4DAAK;IACtC,4DAAK;;;IADe,0DAAa;IAAb,iFAAa;;ADdlC,MAAM,qBAAqB;IAMhC,YAAoB,eAAgC,EAAU,sBAA6C;QAAvF,oBAAe,GAAf,eAAe,CAAiB;QAAU,2BAAsB,GAAtB,sBAAsB,CAAuB;QAJ3G,cAAS,GAAU,YAAY,CAAC;QAEhC,qCAAgC,GAAU,KAAK,CAAC;IAI/C,CAAC;IAEF,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,eAAe,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;IACzJ,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC;IACrD,CAAC;IAED,IAAI,KAAK,CAAC,KAAY;QACpB,IAAI,CAAC,sBAAsB,CAAC,eAAe,GAAG,KAAK,CAAC;IACtD,CAAC;;0FApBU,qBAAqB;qGAArB,qBAAqB;QCXlC,wEACI;QAAA,wEACI;QAAA,qEACI;QAAA,qEAAI;QAAA,6DAAE;QAAA,4DAAK;QACX,qEAAI;QAAA,+DAAI;QAAA,4DAAK;QACb,qEAAI;QAAA,mEAAQ;QAAA,4DAAK;QACjB,qEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QACpB,4DAAK;QACT,4DAAQ;QACR,yEACI;QAAA,sIACI;QAWJ,iHACI;QAER,4DAAQ;QACZ,4DAAQ;QACR,4EAAkE;QAA/C,yLAAmB;QAAtC,4DAAkE;;QAjB5C,2DAAkC;QAAlC,kFAAkC;QAY5C,0DAAkB;QAAlB,gFAAkB;QAKS,0DAA0B;QAA1B,yJAA0B;QAA9C,8EAAmB;;6FDlBzB,qBAAqB;cANjC,uDAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAoD;;AAK7C,MAAM,iBAAiB;IAE5B,SAAS,CAAC,KAAY,EAAE,MAAa;QACnC,IAAI,MAAM,CAAC,WAAW,EAAE,KAAK,MAAM,EAAE;YACnC,OAAO,KAAK,GAAG,KAAK,CAAC;SACtB;aACI;YACH,OAAO,OAAO,GAAG,KAAK,CAAC;SACxB;IACH,CAAC;;kFATU,iBAAiB;oHAAjB,iBAAiB;6FAAjB,iBAAiB;cAH7B,kDAAI;eAAC;gBACJ,IAAI,EAAE,eAAe;aACtB;;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICAlD,wEACI;IAAA,wEACI;IAAA,qEACI;IAAA,wEACI;IAAA,6EACJ;IAAA,4DAAK;IACT,4DAAK;IACT,4DAAQ;IACR,wEACI;IAAA,qEACI;IAAA,qEAAI;IAAA,6DAAE;IAAA,4DAAK;IACX,qEAAI;IAAA,wDAAe;IAAA,4DAAK;IAC5B,4DAAK;IACL,sEACI;IAAA,sEAAI;IAAA,gEAAI;IAAA,4DAAK;IACb,sEAAI;IAAA,wDAAiB;IAAA,4DAAK;IAC9B,4DAAK;IACL,sEACI;IAAA,sEAAI;IAAA,mEAAO;IAAA,4DAAK;IAChB,sEAAI;IAAA,wDAAqB;IAAA,4DAAK;IAClC,4DAAK;IACL,sEACI;IAAA,sEAAI;IAAA,iEAAK;IAAA,4DAAK;IACd,sEAAI;IAAA,wDAAkB;IAAA,4DAAK;IAC/B,4DAAK;IACL,sEACI;IAAA,sEAAI;IAAA,iEAAK;IAAA,4DAAK;IACd,sEAAI;IAAA,wDAAkB;IAAA,4DAAK;IAC/B,4DAAK;IACL,sEACI;IAAA,sEAAI;IAAA,mEAAO;IAAA,4DAAK;IAChB,sEAAI;IAAA,wDAAoB;IAAA,4DAAK;IACjC,4DAAK;IACT,4DAAQ;IACZ,4DAAQ;;;IAvBQ,2DAAe;IAAf,mFAAe;IAIf,0DAAiB;IAAjB,qFAAiB;IAIjB,0DAAqB;IAArB,yFAAqB;IAIrB,0DAAkB;IAAlB,sFAAkB;IAIlB,0DAAkB;IAAlB,sFAAkB;IAIlB,0DAAoB;IAApB,wFAAoB;;;IAIpC,sEACI;IAAA,uDACJ;IAAA,4DAAM;;;IADF,0DACJ;IADI,iGACJ;;AD3BO,MAAM,iBAAiB;IAI5B,YAAoB,eAA+B,EAC/B,cAA6B,EAC7B,MAAa;QAFb,oBAAe,GAAf,eAAe,CAAgB;QAC/B,mBAAc,GAAd,cAAc,CAAe;QAC7B,WAAM,GAAN,MAAM,CAAO;QAJjC,kBAAa,GAAU,YAAY,CAAC;IAMpC,CAAC;IAED,aAAa;QACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IAED,QAAQ;QACN,IAAI,OAAO,GAAU,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,SAAS,CACvD,CAAC,YAAY,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,GAAG,YAAY,EAC9C,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,GAAG,eAAe,CAAC,CAAC;IACnD,CAAC;;kFAnBU,iBAAiB;iGAAjB,iBAAiB;QCV9B,kHACI;QAkCJ,6GACI;QAEJ,yEACI;QAAA,4EAAkC;QAA1B,yIAAS,mBAAe,IAAC;QAAC,wEAAa;QAAA,4DAAS;QAC5D,4DAAM;;QAxCC,8EAAgB;QAmClB,0DAAiB;QAAjB,+EAAiB;;6FDzBT,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAkD;;;AAO3C,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,yEACI;QAAA,qEAAI;QAAA,wEAAa;QAAA,4DAAK;QACtB,sEACI;QAAA,uEAAsB;QAAA,+DAAI;QAAA,4DAAI;QAAC,8DAAE;QAAA,uEAA0B;QAAA,mEAAQ;QAAA,4DAAI;QAAC,8DAAE;QAAA,wEAAuB;QAAA,iEAAK;QAAA,4DAAI;QAC9G,4DAAM;QACV,4DAAS;;6FDEI,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAQ3C,MAAM,aAAa;IAExB,YAAoB,sBAA6C;QAA7C,2BAAsB,GAAtB,sBAAsB,CAAuB;IAAI,CAAC;IAEtE,QAAQ;IACR,CAAC;IAED,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC;IACrD,CAAC;IAED,IAAI,KAAK,CAAC,KAAY;QACpB,IAAI,CAAC,sBAAsB,CAAC,eAAe,GAAG,KAAK,CAAC;IACtD,CAAC;;0EAbU,aAAa;6FAAb,aAAa;QCR1B,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QACrB,2EAAkE;QAA/C,gLAAmB;QAAtC,4DAAkE;;QAA3B,0DAA0B;QAA1B,yJAA0B;QAA9C,8EAAmB;;6FDOzB,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AAEmB;AACe;;AAU1E,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,mBAFV,CAAC,0EAAe,EAAE,yFAAsB,CAAC,YAH3C;YACP,4DAAY;SACb;mIAGU,UAAU,cAJnB,4DAAY;6FAIH,UAAU;cAPtB,sDAAQ;eAAC;gBACR,YAAY,EAAE,EAAE;gBAChB,OAAO,EAAE;oBACP,4DAAY;iBACb;gBACD,SAAS,EAAE,CAAC,0EAAe,EAAE,yFAAsB,CAAC;aACrD;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAA;AAA2C;;;AAQpC,MAAM,eAAe;IAE1B,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;IAAI,CAAC;IAExC,WAAW;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,6CAA6C,CAAC,CAAC;IACnF,CAAC;IAED,iBAAiB,CAAC,OAAc;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,6CAA6C,GAAG,OAAO,CAAC,CAAC;IAC3F,CAAC;;8EAVU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAA2C;;AAKpC,MAAM,sBAAsB;IAEjC;QAEA,oBAAe,GAAU,OAAO,CAAC;IAFjB,CAAC;;4FAFN,sBAAsB;yGAAtB,sBAAsB,WAAtB,sBAAsB,mBAFrB,MAAM;6FAEP,sBAAsB;cAHlC,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EmployeeListComponent } from './components/employee-list/employee-list.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { EmployeeComponent } from './components/employee/employee.component';\nimport { HomeComponent } from './components/home/home.component';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'employee', component: EmployeeListComponent },\n  { path: 'employee/:id', component: EmployeeComponent },\n  { path: 'about', component: AboutComponent },\n  { path: '', redirectTo: '/home', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  pageHeader:string = 'Employee Details';\n\n  name:string = 'Tom';\n}\n","<div>\n  <!-- <h1>{{pageHeader}}</h1> -->\n  <!-- Name: <input type=\"text\" [(ngModel)]=\"name\"/>\n  <app-employee [simpleInput]=\"name\"></app-employee> -->\n  <app-header></app-header>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TestModule } from './modules/test/test.module';\n\nimport { AppComponent } from './app.component';\nimport { EmployeeComponent } from './components/employee/employee.component';\nimport { EmployeeListComponent } from './components/employee-list/employee-list.component';\nimport { EmployeeTitlePipe } from './components/employee-list/employee-title.pipe';\nimport { EmployeeCountComponent } from './components/employee-count/employee-count.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AboutComponent } from './components/about/about.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { HomeComponent } from './components/home/home.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployeeComponent,\n    EmployeeListComponent,\n    EmployeeTitlePipe,\n    EmployeeCountComponent,\n    AboutComponent,\n    HeaderComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    TestModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <h1>About</h1>\n    <p>This is Employee List</p>\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-employee-count',\n  templateUrl: './employee-count.component.html',\n  styleUrls: ['./employee-count.component.css']\n})\nexport class EmployeeCountComponent implements OnInit {\n  @Input() all:number;\n  @Input() male:number;\n  @Input() female:number;\n\n  selectedRadioButtonValue:string = 'All';\n\n  @Output() countRadioButtonSelectionChanged: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onRadioButtonSelectionChange() {\n    this.countRadioButtonSelectionChanged.emit(this.selectedRadioButtonValue);\n  }\n}\n","<div class=\"container\">\n    <span class=\"radioClass\">Show:</span>\n\n    <input type=\"radio\" name=\"options\" value=\"All\" [(ngModel)]=\"selectedRadioButtonValue\" (change)=\"onRadioButtonSelectionChange()\" />\n    <span class=\"radioClass\">{{\"All(\" + all + \")\"}}</span>\n\n    <input type=\"radio\" name=\"options\" value=\"Male\" [(ngModel)]=\"selectedRadioButtonValue\" (change)=\"onRadioButtonSelectionChange()\" />\n    <span class=\"radioClass\">{{\"Male(\" + male + \")\"}}</span>\n\n    <input type=\"radio\" name=\"options\" value=\"Female\" [(ngModel)]=\"selectedRadioButtonValue\" (change)=\"onRadioButtonSelectionChange()\" />\n    <span class=\"radioClass\">{{\"Female(\" + female + \")\"}}</span>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { IEmployee } from '../../interfaces/iemployee';\nimport { EmployeeService } from '../../services/employee.service';\nimport { UserPreferencesService } from '../../services/user-preferences.service';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\n\nexport class EmployeeListComponent implements OnInit {\n  employees:IEmployee[];\n  errorText:string = \"Loading...\";\n\n  selectedEmployeeCountRadioButton:string = 'All';\n\n  constructor(private employeeService: EmployeeService, private userPreferencesService:UserPreferencesService) {\n    \n   }\n\n  ngOnInit() {\n    this.employeeService.getEmployee().subscribe((res) => this.employees = res, (err) => this.errorText = 'Loading Error', () => console.log('completed'));\n  }\n\n  get color():string {\n    return this.userPreferencesService.colorPreference;\n  }\n\n  set color(value:string) {\n    this.userPreferencesService.colorPreference = value;\n  }\n  \n}\n","<table>\n    <thead>\n        <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Username</th>\n            <th>Email</th>\n            <th>Phone</th>\n            <th>Website</th>\n        </tr>\n    </thead>\n    <tbody>\n        <ng-container *ngFor=\"let employee of employees\">\n            <tr>\n                <a [routerLink]=\"['/employee', employee.id]\">\n                    <td>{{employee.id}}</td>\n                </a>\n                <td>{{employee.name}}</td>\n                <td>{{employee.username}}</td>\n                <td>{{employee.email}}</td>\n                <td>{{employee.phone}}</td>\n                <td>{{employee.website}}</td>\n            </tr>\n        </ng-container>\n        <tr *ngIf=\"!employees\">\n            <td colspan=\"6\">{{errorText}}</td>\n        </tr>\n    </tbody>\n</table>\n<input type=\"text\" [(ngModel)]=\"color\" [style.background]=\"color\">","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'employeeTitle'\n})\nexport class EmployeeTitlePipe implements PipeTransform {\n\n  transform(value:string, gender:string):string {\n    if (gender.toLowerCase() === 'male') {\n      return 'Mr.' + value;\n    }\n    else {\n      return 'Miss.' + value;\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { IEmployee } from '../../interfaces/iemployee';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EmployeeService } from '../../services/employee.service';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n  employee:IEmployee;\n  statusMessage:string = \"Loading...\";\n\n  constructor(private employeeService:EmployeeService, \n              private activatedRoute:ActivatedRoute, \n              private router:Router) {\n\n  }\n\n  onButtonClick() {\n    this.router.navigate(['/employee']);\n  }\n\n  ngOnInit() {\n    let empCode:string = this.activatedRoute.snapshot.params['id'];\n    this.employeeService.getEmployeeByCode(empCode).subscribe(\n      (employeeData) => this.employee = employeeData,\n      (err) => this.statusMessage = 'Error loading');\n  }\n}\n","<table *ngIf=\"employee\">\n    <thead>\n        <tr>\n            <th colspan=\"2\">\n                Employee Details\n            </th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>ID</td>\n            <td>{{employee.id}}</td>\n        </tr>\n        <tr>\n            <td>Name</td>\n            <td>{{employee.name}}</td>\n        </tr>\n        <tr>\n            <td>Usename</td>\n            <td>{{employee.username}}</td>\n        </tr>\n        <tr>\n            <td>Email</td>\n            <td>{{employee.email}}</td>\n        </tr>\n        <tr>\n            <td>Phone</td>\n            <td>{{employee.phone}}</td>\n        </tr>\n        <tr>\n            <td>Website</td>\n            <td>{{employee.website}}</td>\n        </tr>\n    </tbody>\n</table>\n<div *ngIf=\"!employee\">\n    {{statusMessage}}\n</div>\n<div style=\"margin-top: 10px;\">\n    <button (click)=\"onButtonClick()\">Employee List</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n    <h1>Employee List</h1>\n    <nav>\n        <a routerLink=\"/home\">Home</a> | <a routerLink=\"/employee\">Employee</a> | <a routerLink=\"/about\">About</a>\n    </nav>\n</header>","import { Component, OnInit } from '@angular/core';\nimport { UserPreferencesService } from '../../services/user-preferences.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private userPreferencesService:UserPreferencesService) { }\n\n  ngOnInit(): void {\n  }\n\n  get color():string {\n    return this.userPreferencesService.colorPreference;\n  }\n\n  set color(value:string) {\n    this.userPreferencesService.colorPreference = value;\n  }\n\n}\n","<h1>This is Home</h1>\r\n<input type=\"text\" [(ngModel)]=\"color\" [style.background]=\"color\">","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmployeeService } from '../../services/employee.service';\nimport { UserPreferencesService } from '../../services/user-preferences.service';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [EmployeeService, UserPreferencesService]\n})\nexport class TestModule { }\n","import { Injectable } from '@angular/core';\nimport { IEmployee } from '../interfaces/iemployee';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  constructor(private http:HttpClient) { }\n\n  getEmployee(): Observable<IEmployee[]> {\n    return this.http.get<IEmployee[]>('https://jsonplaceholder.typicode.com/users/');\n  }\n\n  getEmployeeByCode(empCode:string): Observable<IEmployee> {\n    return this.http.get<IEmployee>('https://jsonplaceholder.typicode.com/users/' + empCode);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserPreferencesService {\n\n  constructor() { }\n\n  colorPreference:string = 'green';\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}